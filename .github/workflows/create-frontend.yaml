name: Create Frontend
run-name: frontend
on:
  workflow_call:
    secrets:
      GHCR_PAT:
        required: true
      GH_ACTIONS_BOT_ACCESS_TOKEN:
        required: true
jobs:
  deploy-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Context Variable
        id: context_var
        run: |
          echo "CONTEXT=frontend" >> "$GITHUB_ENV"

      - name: Variables
        id: vars
        run: |
          echo "VERSION=1.0.${{ github.run_number }}" >> "$GITHUB_ENV"
          echo "TAG=ghcr.io/digitalproductschool/${{ github.event.repository.name }}/${{ env.CONTEXT }}:1.0.${{ github.run_number }}" >> "$GITHUB_ENV"

      
      - name: Extract env vars
        id: env_vars
        run: |
          if [ -f "env_var_file.txt" ]; then

          # Read values from the file
          env_var=$(grep "env:" env_var_file.txt | awk '{print $2}')
        
          # Print the extracted values
          echo "environment=$env_var" >> "$GITHUB_ENV"
        
          else
            echo "File env_var_file.txt does not exist."
          fi

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Github Packages
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{ secrets.GHCR_PAT }}
      
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ env.TAG }}
          context: ./${{ env.CONTEXT }}

      - name: Adjust env
        run: |
          if [ "${{ env.environment }}" == "development" ]; then
              ENV="dev"
          elif [ "${{ env.environment }}" == "production" ]; then
              ENV="prod"
          fi
          echo "ENV=$ENV" >> "$GITHUB_ENV"

      - name: Create Argo App
        run: |
          chmod +x deployment/scripts/create-argo-app.sh
          ./deployment/scripts/create-argo-app.sh  ${{ env.ENV }} ${{ env.CONTEXT }} ${{ github.event.repository.name }}

      - name: Update Helm
        run: |
          chmod +x deployment/scripts/update-helm-values.sh
          ./deployment/scripts/update-helm-values.sh ${{ env.VERSION }} ${{ env.IMAGE }}  "" ${{ env.ENV }} "" "" ${{ env.CONTEXT }} ${{ github.event.repository.name }}

      - name: Delete env vars file
        run: rm -rf env_vars_file.txt

      - name: Commit changes
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add .
          git commit -m "Deploy ${{ env.CONTEXT }} to ${{ env.ENV }} ðŸ¤–"
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GH_ACTIONS_BOT_ACCESS_TOKEN}}
          branch: ${{ github.ref }}